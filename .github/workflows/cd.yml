name: CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: "cd"
  cancel-in-progress: false

jobs:
  build-lambdas:
    name: Build Lambdas
    runs-on: ubuntu-latest
    container:
      image: swift:5.10-amazonlinux2
    steps:
      - name: Install additional dependencies
        run: yum -y install {libuuid,libicu,libedit,sqlite,python,ncurses,openssl}-devel libtool jq zip

      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache SPM
        uses: actions/cache@v3
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Archive
        run: |
          mkdir -p archives
          swift package archive --output-path archives --verbose 2
          ls -d archives/*/* | grep -v \.zip$ | xargs rm

      - name: Upload lambda artifacts
        uses: actions/upload-artifact@v3
        with:
          name: archives
          path: archives
          if-no-files-found: error
          retention-days: 1

  build-SAM-template:
    name: Build SAM Template
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup python 
        uses: actions/setup-python@v5

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Setup SAM
        uses: aws-actions/setup-sam@v2

      - name: Validate SAM template
        run: make validate-sam-template

      - name: Build SAM template
        run: make build-sam-template

      - name: Upload SAM artifact
        uses: actions/upload-artifact@v3
        with:
          name: sam-artifact
          path: .aws-sam
          if-no-files-found: error
          retention-days: 1
    
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs:
      - build-lambdas
      - build-SAM-template
    environment:
      name: production
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Download lambda artifact
        uses: actions/download-artifact@v3
        with:
          name: archives
          path: archives
      
      - name: Download SAM artifact
        uses: actions/download-artifact@v3
        with:
          name: sam-artifact
          path: .aws-sam
    
      - name: Setup python 
        uses: actions/setup-python@v5

      - name: Setup SAM
        uses: aws-actions/setup-sam@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Deploy
        id: deploy
        run: make deploy-without-archive
        env:
          AWS_REGION: ${{ vars.AWS_REGION }}
          AWS_STACK: ${{ vars.AWS_STACK }}
